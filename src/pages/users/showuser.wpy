<style lang="less">
page{
  background-color:#FFFFFF;
}
.avatar-wrap{
  position:relative;

  margin-right:30px;
}
.avatar{
  width:50px;
  height:50px;
  display:block;
  border-radius:50%;

}
.pagehead{
  height:100px;
}

.navbar {
    .page,
    .page__bd{
        height: 100%;
    }
    .page__bd{
        padding-bottom: 0;
    }
    .weui-tab__content{
        padding-top: 60px;
        text-align: center;
    }
}
.weui-media-box__info__meta{
  magin: 0;
  font-size: 12px;
}
.notice-info{
  magin-top:5px;
}
.notice-title{
  white-space: normal;
  font-size:14px;
}
.reply-count{
  background-color:#d8d8d8;
  float:right;
}
.button-sp-area{
    margin: 0 auto;
    padding-top: 10px;
    padding-right:10px;
    width: 60%;
}
.mini-btn{
    margin-right: 5px;
}
.userintro{
  font-size:10px;
}
.post{
  float:right;
  background-color:#FFFFFF;
  position: fixed;
  bottom:30px;
  right:20px;
  border:0 solid #FFFFFF;
  box-shadow:4px 1px 1px #cccccc;
  width:50px;
  height:50px;
  border-radius:50%;

}
</style>
<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells weui-cells_after-title pagehead">
        <view class="weui-cell">
          <view class="weui-cell__hd avatar-wrap" url="/pages">
            <image class="avatar" src="https://iocaffcdn.phphub.org/uploads/avatars/3995_1516760409.jpg?imageView2/1/w/200/h/200"/></image>
          </view>
          <view class="weui-cell__bd">
            <view>{{ user.username }}
              <view wx:if="{{user.verified}}" class="userintro">
              北京大学{{}}   工学院生医系教授{{}}  <icon type="success" size="20"></icon></view>
            </view>
            <view wx:if="{{me!==hisid}}"><!--对自己不显示-->
            <button wx:if="{{ !followed}}" class="weui-btn mini-btn" type="primary" size="mini" bindtap="follow">+关注</button>
            <button wx:if="{{followed}}" class="weui-btn mini-btn" type="default" size="mini" bindtap="unfollow">取消关注</button>
            </view>
          </view>
        </view>
      </view>
      <view class="navbar page__bd">
        <view class="weui-tab">
          <view class="weui-navbar">
            <view wx:for="{{tabs}}" wx:key="*this" id="{{index}}" class="weui-navbar__item {{activeIndex ==index ? 'weui-bar__item_on' : '' }}" @tap="tabClick">
              <view class="weui-navbar__title">{{ item }}</view>
            </view>
            <view class="weui-navbar__slider" style="left: {{ sliderLeft }}px; transform: translateX({{ sliderOffset}}px); -webkit-transform: translateX({{sliderOffset}}px);"></view>
          </view>
          <view class="weui-tab__panel">
            <view class="weui-tab__content" hidden="{{activeIndex !=0 }}">这个暂时还没有

            </view>

            <view class="weui-panel__bd" hidden="{{activeIndex !=1 }}">
              <view class="weui-panel__bd">
                <repeat for="{{noticeList}}" key="id" index="n_index" item="notice">
                  <navigator url="" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                    <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
                      <image class="weui-media-box__thumb avatar" src=""></image>
                    </view>
                    <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                      <view class="weui-media-box__title">{{ notice.title }}</view>
                      <view class="weui-media__info notice-info">
                        <view class="weui-media-box__desc">{{ notice.description }}</view>
                        <view class="weui-media-box__info__meta">{{ notice.author.username }}</view>
                        <view class="weui-media-box__info__meta">{{ notice.addTime }}</view>
                      </view>
                    </view>
                  </navigator>
                </repeat>
                <view class="weui-loadmore weui-loadmore_line" wx:if="{{noMoreData_notice }}">
                  <view class="weui-loadingmore_tips weui-loadmore__tips_in-line">到底了~</view>
                </view>
              </view>
            </view>

            <view class="weui-tab__content" hidden="{{activeIndex !=2 }}">
              <!--浮动的图标，写评价-->
              <view bindtap="Addcomment">
                <image class="post" src="/images/post.png"></image>
              </view>
              <!--评价列表-->
              <repeat for="{{commentList}}" key="id" index="n_index" item="comment">
                <view class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                  <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
                    <image class="weui-media-box__thumb avatar" src=""></image>
                  </view>
                  <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                    <view class="weui-media-box__info__meta">{{comment.username }}</view>
                    <view class="weui-media-box__title">{{ comment.content }}</view>
                    <view class="weui-media-box__info__meta">{{comment.postTime}}</view>
                  </view>
                </view>
              </repeat>

            </view>

          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '@/utils/api'
const sliderWidth = 96

export default class UserShow extends wepy.page {
  config={
    navigationBarTitleText: '用户详情'
  }
  data={
    tabs: ['介绍', '公告', '评价'],
    activeIndex: 0,
    sliderOffset: 0,
    sliderLeft: 0,
    user: null,
    me: null,
    noticeList: [],
    page: 1,
    noMoreData_notice: false,
    followed: false,
    commentList: [],
    hisid: null
  }

  methods={
    tabClick(e) {
      this.sliderOffset = e.currentTarget.offsetLeft
      this.activeIndex = e.currentTarget.id
    }

  }

  async getUser(id) {
    try {
      let token = await wepy.getStorageSync('token')
      let userResponse = await api.request({
        url: 'api/wx/users/' + id + '/info',
        method: 'GET',
        header: {
          'Authorization': token
        }
      })
      if (userResponse.statusCode === 200) {
        this.user = userResponse.data.data

        this.$apply()
      }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '出错了'
      })
    }
  }

  async getNotice(id, page = 1, reset = false) {
    try {
      let noticeListResponse = await api.request({
        url: 'api/wx/contents' + '?authorid=' + id + '&page=' + page,
        method: 'GET'
      })
      let noticeList = noticeListResponse.data.data
      this.noticeList = reset ? noticeList.docs : this.noticeList.concat(noticeList.docs)
      if (noticeList.page === noticeList.pages) {
        this.noMoreData_notice = true
      }
      this.$apply()
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '发生错误'
      })
    }
  }

  async getComment(id) {
    try {
      let token = await wepy.getStorageSync('token')
      let commentResponse = await api.request({
        url: 'api/wx/comment/' + id,
        method: 'GET',
        header: {
          'Authorization': token
        }
      })
      let commentList = commentResponse.data.data
      this.commentList = commentList
      this.$apply()
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '发生错误'
      })
    }
  }

  async follow() {
    try {
      let token = await wepy.getStorageSync('token')
      let followResponse = await api.request({
        url: 'api/wx/follow/' + this.user.userInfo.userId + '/add',
        method: 'POST',
        header: {
          'Authorization': token
        }
      })
      if (followResponse.statusCode === 200) {
        wx.showToast({
          title: followResponse.data.meta.message,
          icon: 'success',
          duration: 3000
        })
        this.followed = true
        this.$apply()
      }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '发生错误'
      })
    }
  }

  async unfollow() {
    try {
      let token = await wepy.getStorageSync('token')
      let followResponse = await api.request({
        url: 'api/wx/follow/' + this.user.userInfo.userId + '/delete',
        method: 'POST',
        header: {
          'Authorization': token
        }
      })
      if (followResponse.statusCode === 200) {
        wx.showToast({
          title: followResponse.data.meta.message,
          icon: 'success',
          duration: 3000
        })
        this.followed = false
        this.$apply()
      }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '发生错误'
      })
    }
  }

  async Addcomment() {
    wx.navigateTo({
      url: '/pages/commu/addcomment?id=' + this.user.userInfo.userId
    })
  }

  async ifFollowed(id) {
    try {
      let token = await wepy.getStorageSync('token')
      let ifResponse = await api.request({
        url: 'api/wx/follows/' + id,
        method: 'POST',
        header: {
          'Authorization': token
        }
      })
      if (ifResponse.statusCode === 200 && ifResponse.data.meta.code === 0) {
        this.followed = ifResponse.data.data.follow
        this.$apply()
      }
    } catch (err) {
      console.log(err)
      wepy.showModal({
        title: '提示',
        content: '发生错误'
      })
    }
  }

  async onReachBottom() {
    if (this.activeIndex !== 1) {
      return
    }
    if (this.noMoreData_notice) {
      return
    }
    this.page = this.page + 1
    await this.getNotice(this.page)
    this.$apply()
  }

  async onLoad(options) {
    let res = await wepy.getSystemInfo()

    this.sliderLeft = (res.windowWidth / this.tabs.length - sliderWidth) / 2
    this.sliderOffset = res.windowWidth / this.tabs.length * this.activeIndex
    let me = await this.$parent.getCurrentUser()
    this.me = me.userInfo._id
    // this.$apply()
    if (options.id) {
      this.hisid = options.id
      this.ifFollowed(options.id)
      this.getUser(options.id)
      this.getNotice(options.id)
      this.getComment(options.id)
    } else {
      this.hisid = this.me
      this.getUser('me')
      this.getComment('me')
      // let me = await this.$parent.getCurrentUser()
      this.getNotice(this.me)
    }
    this.$apply()

    console.log(options)
  }
}

</script>
